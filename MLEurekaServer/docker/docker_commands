sudo service docker restart

# build will leave a repository built on local | docker ls will show it
docker build --no-cache=true -f docker/DockerFile.eureka  -t scheeran/eurekaserver-img:1.0 --rm=true

docker push scheeran/eurekaserver-img:1.0            # Upload tagged image to registry

#Create a docker volume to run the image from
docker volume create --name=mlservice-cloud-volume

#Run docker
docker run --name=eurekaserver-instance -it --rm -v /mlservicerootdir/eurekaserver -w /mlservicerootdir/eurekaserver -p 8761:8761 --volume=mlservice-cloud-volume:/config eurekaserver-img:latest


docker run --rm -it -v /usr/project -w /project maven mvn package && docker-compose up

# -v volume
# -w workdirectory
# N.B: This actually loads a host physical directory and make it available to a container, container location is where physical dir is loaded
# Docker by default has no access to machine directories, it has its own environment going on


#RUN mkdir /mlservice-cloud-volume
#WORKDIR /mlservice-cloud-volume
#VOLUME /mlservice-cloud-volume

docker container ls
docker container stop <hash>           # Gracefully stop the specified container
docker container kill <hash>         # Force shutdown of the specified container
docker container rm <hash>        # Remove specified container from this machine
docker container rm $(docker container ls -a -q)         # Remove all containers
docker image ls -a                             # List all images on this machine
docker image rm <image id>            # Remove specified image from this machine
docker image rm $(docker image ls -a -q)   # Remove all images from this machine
docker login
