<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>MLMicroService</groupId>
	<artifactId>eureka-server</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>
	<name>eurekaserver</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<start-class>com.ml.controller.MLController</start-class>
		<docker.image.prefix>santhoshcheeran</docker.image.prefix>
	</properties>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.9.RELEASE</version>
	</parent>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
			<version>1.4.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
			<version>1.4.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>net.sf.supercsv</groupId>
			<artifactId>super-csv</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
		    <groupId>org.json</groupId>
		    <artifactId>json</artifactId>
		    <version>20180130</version>
		</dependency>	
		<dependency>
		    <groupId>org.springframework.cloud</groupId>
		    <artifactId>spring-cloud-starter-sleuth</artifactId>
		     <version>1.3.3.RELEASE</version>
		</dependency>		
	</dependencies>
	<dependencyManagement>
	    <dependencies>
	        <dependency>
	            <groupId>org.springframework.cloud</groupId>
	            <artifactId>spring-cloud-netflix</artifactId>
	            <version>1.4.4.RELEASE</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency>
	    </dependencies>
	</dependencyManagement>		
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.3.7</version>
					<configuration>
						<registry>registry.hub.docker.com/santhoshcheeran</registry>
						<imageName>${docker.image.prefix}/repository1</imageName>
						<dockerDirectory>${project.build.directory}</dockerDirectory>
						<imageTags>
							<imageTag>${project.version}</imageTag>
						</imageTags>
						<forceTags>true</forceTags>
						<resources>
							<resource>
								<directory>${project.build.directory}</directory>
								<include>${project.build.finalName}.jar</include>
							</resource>
						</resources>
						<authConfig>
							<username>santhoshcheeran</username>
							<password>fTYswF4mXFJx</password>
						</authConfig>						
					</configuration>					
					<executions>
						<execution>
							<id>build-image</id>
							<phase>package</phase>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
		                <execution>
		                	<id>tag-image</id>
		                	<phase>package</phase>
		                    <goals>
		                        <goal>tag</goal>
		                    </goals>		                    
		                    <configuration>
		                        <image>${docker.image.prefix}/${project.artifactId}-image:${project.version}</image>
		                        <newName>${docker.image.prefix}/${project.artifactId}-image:${project.version}</newName>
		                    </configuration>
		                </execution>
		                <execution>
		                	<id>push-image</id>
		                    <phase>deploy</phase>
		                    <goals>
		                        <goal>push</goal>
		                    </goals>
		                    <configuration>
		                        <imageName>${docker.image.prefix}/${project.artifactId}-image:${project.version}</imageName>
		                    </configuration>
		                </execution>						
					</executions>
				</plugin>			
		</plugins>	
	</build>
</project>
