FROM centos:7
FROM openjdk:8
FROM maven:3.3

# This will be mount as a volume 
# for persisting any data across runs
RUN mkdir /var/www && mkdir /var/www/mlservicedatadir

CMD ["sh", "-c", "echo ${JAVA_HOME}"]

RUN apt-get -qq update && apt-get -qqy install git && apt-get -qqy install curl && apt-get -qqy install git-core

RUN useradd -ms /bin/bash mldocker
USER mldocker
CMD ["sh", "-c", "sudo groupadd docker"]
CMD ["sh", "-c", "sudo usermod -aG docker $USER"]
CMD ["sh", "-c", "sudo newgrp docker"]

# creating here as mldocker user has no rights
RUN mkdir /home/mldocker/src
WORKDIR /home/mldocker/src
run rm -rf /home/mldocker/src/Microservices-Architecture  &&  git clone https://github.com/cheerans/Microservices-Architecture
WORKDIR /home/mldocker/src/Microservices-Architecture


#ENV DOCKER_HOST=tcp://localhost:2345
WORKDIR /home/mldocker/src/Microservices-Architecture/MLService
run mkdir /home/mldocker/.m2 && mkdir /home/mldocker/.m2/repository && mvn -Dhttps.protocols=TLSv1.2 -e clean package -Dmaven.test.skip=true

LABEL Description="ml-service"
LABEL Version="1.0"
LABEL orbiter="true"
ARG VERSION=1.0

run rm -rf /home/mldocker/bin && mkdir /home/mldocker/bin && pwd && ls target/ && cp target/ml-service-${VERSION}.jar /home/mldocker/bin/ml-service-latest.jar
WORKDIR /home/mldocker/bin

ENV CLASSPATH .:/home/mldocker/bin/ml-service-latest.jar

EXPOSE 8080 8083 8085 8087

ENTRYPOINT ["java -XX:MaxRAM=700m -Xmx512m", "-Djava.security.egd=file:/dev/./urandom", \
                    "-D${ZUULPROXYADDRESS:http://localhost:8092} \
                     -D${SERVER-PORT:8080} \
                     -D${SERVER-HOST:localhost} \
                     -D${REGION:East} \
                     -D${EUREKA-SERVER1-PORT:8761} \
                     -D${EUREKA-SERVER1-HOST:localhost} \
                     -D${EUREKA-SERVER2-PORT:8762} \
                     -D${EUREKA-SERVER2-HOST:localhost}",\
                     "-jar",\
                     "ml-service-latest.jar"]
