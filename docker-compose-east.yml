version: '3.3'
services:
  mlserver-east:
#    build:
#      context: .
#      dockerfile: MLService/docker/DockerFile.mlservice
    image: 'santhoshcheeran/mlservicerepo:latest'
    environment:
      - ZUULPROXYADDRESS=http://msapigateway-east-1:8091
      - SERVER-PORT=8080
      - SERVER-HOST=mlserver-east
      - REGION=east
      - EUREKA-SERVER1-HOST=eureka-east-1
      - EUREKA-SERVER1-PORT=8761
      - EUREKA-SERVER2-HOST=eureka-east-2
      - EUREKA-SERVER2-PORT=8762
      - ZIPKIN-URL=http://zipkin-server-east:9411
      - JAVA_OPTS=-Xms128m -Xmx256m
    expose:
      - 8080
    ports:
      - 8080      
    depends_on:
      - autoscaler-east
    healthcheck:
      test: ["CMD", "curl", "-f", "http://mlserver-east:8080/health"]
      interval: 120s
      timeout: 60s
      retries: 3  
    restart: on-failure
    networks:
        ml-cloud-network-east:
            aliases:
                - mlserver-east
    volumes:
      - userdata:/var/www/mlservicedatadir
    logging:
      driver: json-file
  autoscaler-east:
    image: 'santhoshcheeran/autoscalerrepo:latest'
    environment:
      - CONFIG_FILE=./properties/ScaleServicesConfig.yml
      - REQ_COUNT_URL=http://msapigateway-east-1:8091/actuator/metrics/req.count
      - CPU_USAGE_URL=http://msapigateway-east-1:8091/actuator/metrics/process.cpu.usage
      - REGION=east
      - JAVA_OPTS=-Xms128m -Xmx256m 
    networks:
        ml-cloud-network-east:
            aliases:
                - autoscaler-east
    volumes:
      - userdata:/var/www/mlservicedatadir
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      driver: json-file      
#  nginx: # read https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-docker/
#    image: 'nginx:stable-alpine'
#    networks:
#        ml-cloud-network-east:
#            aliases:
#                - nginx-east-1     
#                
#    #$ docker exec -it microservices-architecture_nginx_1 sh
#    # ls /etc/nginx/conf.d/
#    # nothing is there, is this a docker version issue ?
#    # The operation is mapping a docker host file to a container file
#    volumes:
#        - type: bind
#          source: "./nginx/conf.d/app.conf"
#          target: "/etc/nginx/conf.d/app.conf"
#          read_only: true
#    ports:
#      - '80:80'
#    command: /bin/sh -c "nginx -g 'daemon off;'"
networks:
    ml-cloud-network-east: 
        external: true
volumes:
    userdata:
        external: true
